[xsaggregateautoregression-command]
syntax = xsAggregateAutoRegression [OUTPUT filename]
shortdesc = Aggregate (combine) auto regression algorithms into a new algorithm.
description = Aggregate (combine) auto regression algorithms into a new algorithm.  The algorithms are matched by field and are weighted by count.
related = xsaggregatecorrelation xsaggregatelinearregression xsaggregatenonlinearregression xsaggregatespearmancorrelation
tags = auto linear nonlinear statistics regression 
usage = public


[xsaggregatecorrelation-command]
syntax = xsAggregateCorrelation [OUTPUT filename]
shortdesc = Aggregate (combine) correlation algorithms into a new algorithm.
description = Aggregate (combine) correlation algorithms into a new algorithm.  The algorithms are matched by field and are weighted by count.
related = xsaggregateautoregression xsaggregatelinearregression xsaggregatenonlinearregression xsaggregatespearmancorrelation
tags = correlation statistics regression 
usage = public


[xsaggregatelinearregression-command]
syntax = xsAggregateLinearRegression [OUTPUT filename]
shortdesc = Aggregate (combine) linear regression algorithms into a new algorithm.
description = Aggregate (combine) linear regression algorithms into a new algorithm.  The algorithms are matched by field and are weighted by count.
related = xsaggregateautoregression xsaggregatecorrelation xsaggregatenonlinearregression xsaggregatespearmancorrelation
tags = auto linear nonlinear statistics regression 
usage = public


[xsaggregatenonlinearregression-command]
syntax = xsAggregateNonLinearRegression [OUTPUT filename]
shortdesc = Aggregate (combine) non-linear regression algorithms into a new algorithm.
description = Aggregate (combine) non-linear regression algorithms into a new algorithm.  The algorithms are matched by field and are weighted by count.
related = xsaggregateautoregression xsaggregatecorrelation xsaggregatelinearregression xsaggregatespearmancorrelation
tags = auto linear nonlinear statistics regression 
usage = public


[xsaggregatespearmancorrelation-command]
syntax = xsAggregateSpearmanCorrelation [OUTPUT filename]
shortdesc = Aggregate (combine) spearman correlation algorithms into a new algorithm.
description = Aggregate (combine) spearman correlation algorithms into a new algorithm.  The algorithms are matched by field and are weighted by count.
 related = xsaggregateautoregression xsaggregatecorrelation xsaggregatelinearregression xsaggregatenonlinearregression
tags = correlation statistics regression
usage = public


[xsapplyautoregression-command]
syntax = xsApplyAutoRegression ((FROM filename) | (coef0=value coef1=value ceof2=value OVER (field)+))
shortdesc = Apply auto regression algorithm against a set of events containing the specified fields
description = Apply auto regression against a set of events containing the specified fields.  The algorithm is derived from either a specified lookup file or by specifying a series of 3 coefficients and one or more fields.  If the algorithm is derived from a lookup file, the fields are embedded in the file.
related = xsapplylinearregression xsapplynonlinearregression
tags = auto linear nonlinear statistics regression 
usage = public


[xsapplylinearregression-command]
syntax = xsApplyLinearRegression ((FROM file) | (coef0=value coef1=value ceof2=value OVER (field)+))
shortdesc = Apply linear regression algorithm against a set of events containing the specified fields
description = Apply linear regression against a set of events containing the specified fields.  The algorithm is derived from either a specified lookup file or by specifying a series of 3 coefficients and one or more fields.  If the algorithm is derived from a lookup file, the fields are embedded in the file.
related = xsapplyautoregression xsapplynonlinearregression
tags = auto linear nonlinear statistics regression 
usage = public


[xsapplynonlinearregression-command]
syntax = xsApplyNonLinearRegression ((FROM file) | (coef0=value coef1=value ceof2=value OVER (field)+))
shortdesc = Apply non-linear regression algorithm against a set of events containing the specified fields
description = Apply non-linear regression against a set of events containing the specified fields.  The algorithm is derived from either a specified lookup file or by specifying a series of 3 coefficients and one or more fields.  If the algorithm is derived from a lookup file, the fields are embedded in the file.
related = xsapplyautoregression xsapplylinearregression
tags = auto linear nonlinear statistics regression 
usage = public


[xscreatecontext-command]
syntax = xsCreateContext name=<string> terms=<conceptlist-option> (type=<contexttype-option>)? (<contextvalues-option>)*
shortdesc = Create a Context containing the named terms of type contexttype
description = This command creates a Context named <context> containing the named terms.  This release requires an odd number of Semantic Terms.  'domain' is the default contexttype.  For every contextvalues-option that is not specified, a corresponding "stats" command must be run somewhere on the search path before fgenerate.  A macro, `fgenerate(name, terms)` may also be used.
comment1 = creates a Context called AirTime of type 'domain' containing five terms
example1 = ... | xsCreateContext name=AirTime terms="minimal,short,medium,long,extended"
comment2 = creates a Context ArrDelay of type 'average_centered' containing three terms
example2 = | xsCreateContext name=ArrDelay terms="early,ontime,late" type=average_centered avg=0.0 stdev=15
comment3 = creates a Context ArrivalDelay of type 'average_centered', containing three terms, with the avg value set to 0 and the std deviation set to 30.  The terms are shped as Triangles.  The end terms are linear.
example3 = | xsCreateContext name=ArrivalDelay terms="Early,OnTime,Late" type='average_centered' avg=0.0 stdev=30 shape=triangle endShape=linear
tags =  context
related = xsDisplayContext, xsFindMemebership, xsGetWhereCIX, xsUpdateContext, xsWhere
usage = public


[contextvalues-option]
syntax = [avg=double] | [count=<int>] | [max=double] | [min=double] | [stdev=double]
shortdesc = The values used to drive the Semantic Term generation
description = fgenerate needs certain values to cerate a Context.  These values may be passed into the command via arguments.  A subset, or all of the arguments may be used.
 
[conceptlist-option]
syntax = "<string>,<string>,<string>[...,<string>]"
shortdesc = An odd numbered list of Semantic Terms 
description = The Semantic Term list is an odd numbered list of context-sensitive names.  These names should represent the type of values the underlying data that will be measured by the concept.

[contexttype-option]
syntax = average_centered | domain | double | single_decline | single_growth
shortdesc = type of Context
description = There are multiple types of Contexts that can be created.  Currently, five are supported: 'average_centered' (centers the context on the average and uses std dev. to scale term sizes), 'domain' (the default, centers the set on (max-min)/2 and scales the context to cover the whole domain, 'double' (contains only 2 concepts), 'single_decline' (contains only 1 concept that declines over the domain, and 'single_growth' (contains only 1 concept that grows over the domain).


[xsdiscovertrend-command]
syntax = xsDiscoverTrend (field)+ [OVER (field)+] [BY field]
shortdesc = Discover any trend of a field (x) over another field (y) using linear regression.
description = Discover any trend of a field over another field using linear regression.  The trend is determined across the Context associated with the field.  This Context is a prerequisite for the command to run.
related = xsCreateContext xsPerformLinearRegression
tags = predict context trend


[xsdisplayconcept-command]
syntax = xsDisplaySemanticTerm [hedge]* set FROM termSet [; [hedge]* set FROM termSet ]* [USING synonyms]
shortdesc = Display one or more Semantic Terms from a Context
description = Lists all entries that comprise a Semantic Term, optionally modified by one or more linguistic hedges. Hedges may be described from the default synonyms file or from a file specified with the USING paramater. 
tags = set context
related = xsCreateContext, xsDisplayContext, xsFindMemebership, xsGetWhereCIX, xsUpdateContext, xsWhere
usage = public

[xsdisplaycontext-command]
syntax = xsDisplayContext context
shortdesc = Display all Semantic Terms in a Context
description = All of the Semantic Terms contained in a Context are listed in tabular format, which can be charted to display each term and show the terms relatm.
tags = context concept
related = xsCreateContext, xsFindMemebership, xsGetWhereCIX, xsUpdateContext, xsWhere
usage = public


[xsfilter-command]
syntax = xsFilter  NOT IMPLEMENTED IN THIS VERSION
shortdesc = Determines the level of truth (or untruth) of events based on their compatibility index values.
description = Determines the level of truth (or untruth) of events based on their compatibility index values.
tags = conceptual search
related = xsDiscoverTrend
usage = public


[xsfindbestconcept-command]
syntax = xsFindBestSemanticTerm field [IN context [IN scope]]
shortdesc = Find the membership values of a field in a Context
description = For each event, lookup the value of a field and return the most relevant (highest compatible) concept in a context as well as the compatibility index (CIX).  The field "BestSemanticTerm" will contain the concept.  The field "BestCIX" will contain the associated compatibility index.  The field "UOM" will contain the Unit of Measure for the concept.
tags = context
related = xsCreateContext, xsDisplayContext, xsGetWhereCIX, xsDisplaySemanticTerm, xsWhere
usage = public


[xsfindmembership-command]
syntax = xsFindMembership field [IN context [IN scope]]
shortdesc = Find the membership values of a field in a Context
description = For each event, lookup the value of a field and return the membership values of each Context.  A column will be added to the event stream for each Semantic Term in the Context.
tags = context
related = xsCreateContext, xsDisplayContext, xsGetWhereCIX, xsUpdateContext, xsWhere
usage = public

[xsgetwherecix-command]
syntax = xsGetWhereCix [alfacut=value] [cixname=<string>] [cixtype=avg|weighted] [synonyms=file] [usealfa=true] [ <xswhere-option> (<xswhere-andor-option> <xswhere-option>)*
shortdesc = determine how compatible events are with a semantic query.
description = Determine how compatible events are with a semantic query.  This is represented by the Compatibility Index (CIX).  The value of the CIX is added as a named field to each event. The name of the cix field is set by cixname.  It is 'WhereCIX' by default.  The CIX is generated using one of two functions, avg or weighted.  The avg function sums the membership values of eah query and divides by the count.  The weighted function is similar to a weighted average.  The CIX is calculated by putting a higher value on membership in Semantic Terms that are closer to the beginning of the query, and then divides by the weighted count.  Since the CIX is added to each event, other semantic or contextual commands can then be applied to gernate more intelligent information.  
comment1 = adds a column "WhereCIX" containing the compatibility index for each event in the semantic query "AirTime is minimal or AirTime is short"
example1 = ... | xsGetWhereCIX AirTime is minimal or AirTime is short
comment2 = adds a column "WhereCIX" containing the compatibility index for each event in the semantic query "AirTime is minimal or AirTime is short" using the weighted avg function
example2 = ... | xsGetWhereCIX cixtype=weighted AirTime is minimal or AirTime is short
tags = context concept
related = xsCreateContext, xsGetWhereCIX, xsUpdateContext, xsWhere
usage = public


[xslicense-command]
syntax = xslicense [[reactivate] keystring]
shortdesc = Licenses and activates Extreme Search software. Displays license status. Reactivates with new key.
description = When executed with a keystring, applies the product key keystring to Extreme Search for Splunk on a single Splunk search head and all associated indexers. Causes a Splunk search head and each associated indexer to contact the Scianta Analytics licensing servers for activation. When executed without a keystring, displays the license status of Extreme Search on the Splunk search head and each associated indexer. Possible values returned for Status are: Valid: The license key is valid and the software is activated. | Expired: The license key has expired. | Invalid: The license key is not valid. | Inactive: The license key needs to be activated. May require manual activation. | Trial: No license key is installed. The software is within the 48 hour trial period. | NULL: No license key is installed. Note: If any server in your Splunk environment does not have Internet connectivity, please follow the instructions in the Installation Guide for manual activation.
comment1 = Apply and activate a new Extreme Search for Splunk license key.
example1 = | xslicense SXZH-JGIZ-XZXB-294Y-1459-841S-MCTA
comment2 = Display Extreme Search for Splunk license status.
example2 = | xslicense
comment3 = Reactivate with a new license key.
example3 = | xslicense reactivate JINX-SQEP-8B5T-BJNV-JVRV-A6TA-NQXG

tags = system license activation 
usage = public


[xsperformautoregression-command]
syntax = xsPerformAutoRegression (field)+ [BY field] [USING (maxentropy | leastsquares)]]
shortdesc = Perform auto regression of one or more pairs of field y over field x grouped by z.
description = Perform auto regression of one or more pairs of field y over field x grouped by z.   The algorithm used is either Maxentropy or leastsquares (the default).  An auto regression algorithm is performed against each x, y field pair.  The data is first grouped by z (the BY field), if specified.  A regression algorithm of the form y=A*x+B is generated.  A row is written for each of these regressions.  Each row contains the following fields: x,y,bf,bv,numRows,A,B,errA,errB,R2
tags = auto linear nonlinear statistics regression 
related = xsperformautoregression xsperformcorrelation xsperformnonlinearregression xsperformspearmancorrelation
usage = public


[xsperformcorrelation-command]
syntax = xsPerformCorrelation (field)+ [WITH (field)+] [BY field]
shortdesc = Perform linear correlation of a stream of data based on type
description = Perform linear correlation of a data stream.  Pearson's r correlation is used to correlate a set of data points.  
tags = correlation statistics regression 
related = xsperformautoregression xsperformlinearregression xsperformnonlinearregression xsperformspearmancorrelation
usage = public


[xsperformlinearregression-command]
syntax = xsPerformLinearRegression (field)+ OVER (field)+ BY field
shortdesc = Perform linear regression of one or more pairs of field y over field x grouped by z
description = Perform linear regression of one or more pairs of field y over field x grouped by z.   A linear regression algorithm is performed against each x, y field pair.  The data is first grouped by z (the BY field), if specified.  A regression algorithm of the form y=A*x+B is generated.  A row is written for each of these regressions.  Each row contains the following fields: x,y,bf,bv,numRows,A,B,errA,errB,R2
tags = auto linear nonlinear statistics regression 
related = xsperformautoregression xsperformcorrelation xsperformnonlinearregression xsperformspearmancorrelation
usage = public


[xsperformnonlinearregression-command]
syntax = xsPerformNonLinearRegression (field)+ OVER (field)+ BY field
shortdesc = Perform nonlinear regression of one or more pairs of field y over field x grouped by z
description = Perform nonlinear regression of one or more pairs of field y over field x grouped by z.   A nonlinear regression algorithm is performed against each x, y field pair.  The data is first grouped by z (the BY field), if specified.  A regression algorithm of the form y=A*x+B is generated.  A row is written for each of these regressions.  Each row contains the following fields: x,y,bf,bv,numRows,A,B,errA,errB,R2
tags = auto linear nonlinear statistics regression 
related = xsperformautoregression xsperformcorrelation xsperformnonlinearregression xsperformspearmancorrelation
usage = public


[xsperformspearmancorrelation-command]
syntax = xsPerformSpearmanCorrelation (field)+ [WITH (field)+] [BY field]
shortdesc = Perform spearman correlation of a stream of data based on type
description = Perform spearman correlation of a data stream.  Pearson's r correlation is used to correlate a set of data points.  
tags = correlation statistics regression 
related = xsperformautoregression xsperformcorrelation xsperformlinearregression xsperformnonlinearregression
usage = public


[xspredict-command]
syntax = xpredict (field)+ WHEN field is value
shortdesc = Predict future time-series values of a data stream
description = Future time-series values of a data stream can be predicted using linear or non-linear regression.  Linear regression can be used as long as the periodicity is greater than roughly the times the forecast horizon or the time-series is not really periodic.  Nonlinear regression uses polynomial (splin) regression to generate an equation of N terms.  If an upper or lower adaptive threshold is specified, xspredict will determine how long (in time units) before either threshold is violated.
tags = context concept
related = xcix, xclassify, xcorrelate, xdefine, xdisplay, xgenerate, xlookup, xplot, xpredict, xregress, xwhere
usage = public


[xswhere-command]
syntax = xswhere [alfacut=value] [cixname=<string>] [cixtype=avg|weighted] [synonyms=filename] <xswhere-option> (<xswhere-andor-option> <xswhere-option>)*
shortdesc = determine if a field in an event matches a semantic query.
description = Determine how compatible events are with a semantic query.  This is represented by the Compatibility Index (CIX).  The value of the CIX is added as a named field to each event. The name of the cix field is set by cixname.  It is 'WhereCIX' by default.  The CIX is generated using one of two functions, avg or weighted.  The avg function sums the membership values of eah query and divides by the count.  The weighted function is similar to a weighted average.  The CIX is calculated by putting a higher value on membership in Semantic Terms that are closer to the beginning of the query, and then divides by the weighted count.  If the CIX is greater than or equal to the alfacut the event is passed on.  Otherwise the event is not passed on.
comment1 = returns all of the events where "AirTime is minimal or AirTime is short"
example1 = ... | xswhere AirTime is minimal or AirTime is short
comment2 = returns all of the events where "AirTime is minimal or AirTime is short" using the weighted avg function
example2 = ... | xswhere cixtype=weighted AirTime is minimal or AirTime is short
tags = context concept
related = xsCreateContext, xsDisplayContext, xsFindMemebership, xsGetWhereCIX, xsUpdateContext
usage = public

[xswhere-option]
syntax = field [IN context] IS (<xswhere-modifier-option>)* concept
shortdesc = clause that determines if a field value is member of a Semantic Term.
description = The membership value of a field for a specific concept in a context is returned. If 'context' is specified, the Semantic Term in that Context is used.  Otherwise, the context matching the field name is used.  Semantic modifiers, if any, are applied to the concept before the memebership value is returned.

[xswhere-modifier-option]
syntax = [ about | above | after | before | below | close | extremely | generally | not | positive | slightly | somewhat | very | vicinity ]*
shortdesc = modify the concept
description = These modifiers are used to change the dynamics of a concept.

[xswhere-andor-option]
syntax = AND | OR
shortdesc = Boolean expressions
description = Use these boolean expressions to build a larger query

