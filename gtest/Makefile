# Makefile for building Google Test and using it in user
# tests.  
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.

# Please tweak the following variable definitions as needed by your
# project, except GTEST_HEADERS, which you can use in your own targets
# but shouldn't modify.

# Points to the root of Google Test, relative to where this file is.
# Remember to tweak this if you move this file.
#
#
OSTYPE := $(shell uname)
PROCESSOR := $(shell uname -m)
objdir.Cygwin := ../obj/Win/x64
objdir.CYGWIN_NT-6.1 := ../obj/Win/x64
objdir.darwin := ../obj/Mac
objdir.Darwin := ../obj/Mac
objdir.linux  := ../obj/Linux/x64
objdir.Linux  := ../obj/Linux/x64
objdir.GNU/Linux  := ../obj/Linux/x64
OBJDIR := ${objdir.${OSTYPE}}

GTEST_DIR = .

# Where to find user code.
USER_DIR = tests

# Flags passed to the preprocessor.
# Set Google Test's header directory as a system directory, such that
# the compiler doesn't generate warnings in Google Test headers.
CPPFLAGS += -isystem $(GTEST_DIR)/include

# Flags passed to the C++ compiler.
cxx.Cygwin := x86_64-w64-mingw32-g++ -w
cxx.CYGWIN_NT-6.1 := x86_64-w64-mingw32-g++ -w
cxx.darwin := g++
cxx.Darwin := g++
cxx.linux  := g++
cxx.Linux  := g++
cxx.GNU/Linux  := g++
CXX := ${cxx.${OSTYPE}}
#CXX=x86_64-w64-mingw32-g++

cxxflags.Cygwin += -g -Wall -Wextra -pthread -static-libgcc -static-libstdc++
cxxflags.CYGWIN_NT-6.1 += -g -Wall -Wextra -pthread -static-libgcc -static-libstdc++
cxxflags.darwin += -g -Wall -Wextra -pthread 
cxxflags.Darwin += -g -Wall -Wextra -pthread 
cxxflags.linux  += -g -Wall -Wextra -pthread 
cxxflags.Linux  += -g -Wall -Wextra -pthread 
cxxflags.GNU/Linux  += -g -Wall -Wextra -pthread 
#CXXFLAGS += -g -Wall -Wextra -pthread 
#CXXFLAGS += -g -Wall -Wextra -pthread -static-libgcc -static-libstdc++
CXXFLAGS := ${cxxflags.${OSTYPE}}

# All tests produced by this Makefile.  Remember to add new tests you
# created to the list.
TESTS = saParser_unittest saSplunk_unittest saContext_unittest saContextCreate_unittest saConcept_unittest saHash_unittest saHedge_unittest saAutoRegression_unittest saLinearRegression_unittest saQuadRegression_unittest saGeoLiteCity_unittest saInsertUniqueValue_unittest saStatistics_unittest saCSV3_unittest

# All Google Test headers.  Usually you shouldn't change this
# definition.
GTEST_HEADERS = $(GTEST_DIR)/include/gtest/*.h \
                $(GTEST_DIR)/include/gtest/internal/*.h

# House-keeping build targets.

all : $(TESTS)

clean :
	rm -f $(TESTS) gtest.a gtest_main.a *.o

# Builds gtest.a and gtest_main.a.

# Usually you shouldn't tweak such internal variables, indicated by a
# trailing _.
GTEST_SRCS_ = $(GTEST_DIR)/src/*.cc $(GTEST_DIR)/src/*.h $(GTEST_HEADERS)

# For simplicity and to avoid depending on Google Test's
# implementation details, the dependencies specified below are
# conservative and not optimized.  This is fine as Google Test
# compiles fast and for ordinary users its source rarely changes.
gtest-all.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest-all.cc

gtest_main.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest_main.cc

gtest.a : gtest-all.o
	$(AR) $(ARFLAGS) $@ $^

gtest_main.a : gtest-all.o gtest_main.o
	$(AR) $(ARFLAGS) $@ $^ 

# Builds a sample test.  A test should link with either gtest.a or
# gtest_main.a, depending on whether it defines its own main()
# function.

saParser_unittest.o : $(USER_DIR)/saParser_unittest.cc $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/saParser_unittest.cc

saSplunk_unittest.o : $(USER_DIR)/saSplunk_unittest.cc $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/saSplunk_unittest.cc

saContext_unittest.o : $(USER_DIR)/saContext_unittest.cc $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/saContext_unittest.cc

saContextCreate_unittest.o : $(USER_DIR)/saContextCreate_unittest.cc $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/saContextCreate_unittest.cc
saConcept_unittest.o : $(USER_DIR)/saConcept_unittest.cc $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/saConcept_unittest.cc
saHash_unittest.o : $(USER_DIR)/saHash_unittest.cc $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/saHash_unittest.cc
saHedge_unittest.o : $(USER_DIR)/saHedge_unittest.cc $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/saHedge_unittest.cc
saAutoRegression_unittest.o : $(USER_DIR)/saAutoRegression_unittest.cc $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/saAutoRegression_unittest.cc
saLinearRegression_unittest.o : $(USER_DIR)/saLinearRegression_unittest.cc $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/saLinearRegression_unittest.cc
saQuadRegression_unittest.o : $(USER_DIR)/saQuadRegression_unittest.cc $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/saQuadRegression_unittest.cc
saGeoLiteCity_unittest.o : $(USER_DIR)/saGeoLiteCity_unittest.cc $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/saGeoLiteCity_unittest.cc
saInsertUniqueValue_unittest.o : $(USER_DIR)/saInsertUniqueValue_unittest.cc $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/saInsertUniqueValue_unittest.cc
saStatistics_unittest.o : $(USER_DIR)/saStatistics_unittest.cc $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/saStatistics_unittest.cc
saCSV3_unittest.o : $(USER_DIR)/saCSV3_unittest.cc $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/saCSV3_unittest.cc

saParser_unittest : saParser_unittest.o gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@ $(OBJDIR)/saHedge.o  $(OBJDIR)/saParser.o $(OBJDIR)/saHash.o $(OBJDIR)/saContext.o  $(OBJDIR)/saConcept.o $(OBJDIR)/saContextCreate.o $(OBJDIR)/saCSV.o $(OBJDIR)/saCSV3.o $(OBJDIR)/saTokenize.tab.o $(OBJDIR)/lex.yy.o 
saSplunk_unittest : saSplunk_unittest.o gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@ $(OBJDIR)/saHedge.o  $(OBJDIR)/saSplunk.o $(OBJDIR)/saHash.o $(OBJDIR)/saContext.o  $(OBJDIR)/saContextCreate.o $(OBJDIR)/saConcept.o $(OBJDIR)/saCSV.o  $(OBJDIR)/saCSV3.o
saContext_unittest : saContext_unittest.o gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@ $(OBJDIR)/saHedge.o  $(OBJDIR)/saSplunk.o $(OBJDIR)/saHash.o $(OBJDIR)/saContext.o  $(OBJDIR)/saContextCreate.o $(OBJDIR)/saConcept.o $(OBJDIR)/saCSV.o  $(OBJDIR)/saCSV3.o
saConcept_unittest : saConcept_unittest.o gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@ $(OBJDIR)/saHedge.o  $(OBJDIR)/saSplunk.o $(OBJDIR)/saHash.o $(OBJDIR)/saContext.o  $(OBJDIR)/saContextCreate.o $(OBJDIR)/saConcept.o $(OBJDIR)/saCSV.o  $(OBJDIR)/saCSV3.o
saContextCreate_unittest : saContextCreate_unittest.o gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@ $(OBJDIR)/saHedge.o  $(OBJDIR)/saSplunk.o $(OBJDIR)/saHash.o $(OBJDIR)/saContext.o  $(OBJDIR)/saContextCreate.o $(OBJDIR)/saConcept.o $(OBJDIR)/saCSV.o  $(OBJDIR)/saCSV3.o
saHash_unittest : saHash_unittest.o gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@ $(OBJDIR)/saHash.o 
saHedge_unittest : saHedge_unittest.o gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@ $(OBJDIR)/saHedge.o  $(OBJDIR)/saSplunk.o  $(OBJDIR)/saConcept.o  $(OBJDIR)/saCSV.o  $(OBJDIR)/saCSV3.o  $(OBJDIR)/saContext.o  $(OBJDIR)/saContextCreate.o
saAutoRegression_unittest : saAutoRegression_unittest.o gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@  $(OBJDIR)/saAutoRegression.o
saLinearRegression_unittest : saLinearRegression_unittest.o gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@  $(OBJDIR)/saLinearRegression.o
saQuadRegression_unittest : saQuadRegression_unittest.o gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@  $(OBJDIR)/saQuadRegression.o
saGeoLiteCity_unittest : saGeoLiteCity_unittest.o gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@  $(OBJDIR)/saGeoLiteCity.o $(OBJDIR)/saStatistics.o $(OBJDIR)/saHash.o $(OBJDIR)/saCSV.o $(OBJDIR)/saCSV3.o
saInsertUniqueValue_unittest : saInsertUniqueValue_unittest.o gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@  $(OBJDIR)/saInsertUniqueValue.o
saStatistics_unittest : saStatistics_unittest.o gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@  $(OBJDIR)/saStatistics.o
saCSV3_unittest : saCSV3_unittest.o gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@  $(OBJDIR)/saCSV3.o $(OBJDIR)/saCSV.o

#	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@ $(OBJDIR)/saHedge.o  $(OBJDIR)/saParser.o $(OBJDIR)/saHash.o $(OBJDIR)/saContext.o  $(OBJDIR)/saConcept.o $(OBJDIR)/saContextCreate.o $(OBJDIR)/saSplunk.o $(OBJDIR)/saOpenFile.o $(OBJDIR)/saCSV.o $(OBJDIR)/saSignal.o $(OBJDIR)/saLicensing.o $(OBJDIR)/saTokenize.tab.o $(OBJDIR)/lex.yy.o $(LICENSELIB) $(LDFLAGS)
