#!/usr/bin/expect
set timeout 20
log_user 0
spawn bash
send "export SPLUNK_HOME=c:/PROGRA~1/Splunk\r"
send "export PYTHONHOME=c:/PROGRA~1/Splunk/Python-2.7\r"
send "export PYTHONLIB=c:/PROGRA~1/Splunk/Python-2.7Lib\r"

send_user "\n\nREGRESSION TESTS STARTED\n"

# Create Context (type=domain)
send "cat header | $env(SPLUNK_HOME)/bin/python ../release/xtreme/bin/xsCreateContext.py name=TEST terms=tiny,short,medium,tall,gigantic type=domain avg=0 count=0 max=100 min=0 stdev=0 uom=inches scope=global\r"
expect {
    timeout { send_user "\nTEST FAIL - xsCreateContext (type=domain)"; exit 1 }
    "TEST,tiny,short,medium,tall,gigantic*" { send_user "\nTEST PASS - xsCreateContext (type=domain)" }
}

# Create Context (type=average_centered)
send "cat header | $env(SPLUNK_HOME)/bin/python ../release/xtreme/bin/xsCreateContext.py name=TEST2 terms='tiny,short,medium,tall,gigantic' type=average_centered avg=0 count=0 max=100 min=0 stdev=1 uom=inches scope=global\r"
expect {
    timeout { send_user "\nTEST FAIL - xsCreateContext (type=domain)"; exit 1 }
    "TEST2,tiny,short,medium,tall,gigantic*" { send_user "\nTEST PASS - xsCreateContext (type=average_centered)" }
}

# Create UD Context (type=domain)
send "cat header | $env(SPLUNK_HOME)/bin/python ../release/xtreme/bin/xsCreateUDContext.py name=TESTUD terms='small,medium,big' type=domain avg=0 count=0 max=100 min=0 stdev=0 uom=inches\r"
expect {
    timeout { send_user "\nTEST FAIL - xsCreateUDContext (type=average_centered)"; exit 1 }
    "TESTUD,small,medium,big*" { send_user "\nTEST PASS - xsCreateContext (type=domain)" }
}

# Create UD Context (type=average_centered)
send "cat header | $env(SPLUNK_HOME)/bin/python ../release/xtreme/bin/xsCreateUDContext.py name=TESTUD2 terms='small,medium,big' type=average_centered avg=0 count=0 max=100 min=0 stdev=1 uom=inches\r"
expect {
    timeout { send_user "\nTEST FAIL - xsCreateUDContext (type=average_centered)"; exit 1 }
    "TESTUD2,small,medium,big*" { send_user "\nTEST PASS - xsCreateContext (type=average_centered)" }
}

# List Contexts (TEST, TEST2, TESTUD, TESTUD2)
send "cat header | $env(SPLUNK_HOME)/bin/python ../release/xtreme/bin/xsListContexts.py -s app\r"
expect {
    timeout { send_user "\nTEST FAIL - xsListContexts (TEST,TEST2,TESTUD,TESTUD2)"; exit 1 }
    "context*TEST*TEST2*TESTUD*TESTUD2" { send_user "\nTEST PASS - xsListContexts (TEST,TEST2,TESTUD,TESTUD2)" }
}

# Clone Contexts (TEST -> TEST3)
send "cat header | $env(SPLUNK_HOME)/bin/python ../release/xtreme/bin/xsCloneContext.py TEST IN global to TEST3 IN global\r"
# NO RESPONSE TO VALIDATE
#expect {
#    timeout { send_user "\nTEST FAIL - xsCloneContexts (TEST -> TEST3)"; exit 1 }
#    "context*TEST*TEST2*TEST3*TESTUD*TESTUD2" { send_user "\nTEST PASS - xsCloneContexts (TEST -> TEST3)" }
#}


# Display Context (TEST)
send "cat header | $env(SPLUNK_HOME)/bin/python ../release/xtreme/bin/xsDisplayContext.py TEST\r"
expect {
    timeout { send_user "\nTEST FAIL - xsDisplayContext (TEST,TEST2,TESTUD,TESTUD2)"; exit 1 }
    "TEST,tiny,short,medium,tall,gigantic*" { send_user "\nTEST PASS - xsDisplayContext (TEST)" }
}

# Rename Context (TEST -> TESTR)
send "cat header | $env(SPLUNK_HOME)/bin/python ../release/xtreme/bin/xsRenameContext.py TEST in global to TESTR in global\r"
expect {
    timeout { send_user "\nTEST FAIL - xsRenameContext (TEST -> TESTR)"; exit 1 }
    "Context TEST successfully renamed to TESTR" { send_user "\nTEST PASS - xsRenameContext (TEST -> TESTR)" }
}

# Create Concept (teeny in TESTR)
send "cat header | $env(SPLUNK_HOME)/bin/python ../release/xtreme/bin/xsCreateConcept.py teeny IN TESTR WITH min=0 max=10 shape=pi scope=global\r"
expect {
    timeout { send_user "\nTEST FAIL - xsCreateConcept (teeny in TESTR)"; exit 1 }
    "TESTR,tiny,short,medium,tall,gigantic,teeny*" { send_user "\nTEST PASS - xsCreateConcept (teeny in TESTR)" }
}

# Clone Concept (teeny from TESTR to teeny from TEST2)
send "cat header | $env(SPLUNK_HOME)/bin/python ../release/xtreme/bin/xsCloneConcept.py teeny FROM TESTR in global TO teeny FROM TEST2 in global\r"
# NO RESPONSE TO VALIDATE
#expect {
#    timeout { send_user "\nTEST FAIL - xsCloneConcept (teeny from TESTR to teeny from TEST2)"; exit 1 }
#    "Concept teeny successfully cloned" { send_user "\nTEST PASS - xsCloneConcept (teeny from TESTR to teeny from TEST2)" }
#}

# Delete Concept (teeny from TESTR)
send "cat header | $env(SPLUNK_HOME)/bin/python ../release/xtreme/bin/xsDeleteConcept.py teeny FROM TESTR in global\r"
# NO RESPONSE TO VALIDATE
#expect {
#    timeout { send_user "\nTEST FAIL - xsDeleteConcept (teeny from TESTR)"; exit 1 }
#    "Concept teeny successfully deleted" { send_user "\nTEST PASS - xsDeleteConcept (teeny from TESTR)" }
#}

# List Concept (TESTR)
send "cat header | $env(SPLUNK_HOME)/bin/python ../release/xtreme/bin/xsListConcepts.py FROM TESTR in global \r"
expect {
    timeout { send_user "\nTEST FAIL - xsListConcepts (TESTR)"; exit 1 }
    "Concept*tiny*short*medium*tall*gigantic*" { send_user "\nTEST PASS - xsListConcepts (TESTR)" }
}

# List Concept (TEST2)
send "cat header | $env(SPLUNK_HOME)/bin/python ../release/xtreme/bin/xsListConcepts.py FROM TEST2 in global \r"
expect {
    timeout { send_user "\nTEST FAIL - xsListConcepts (TEST2)"; exit 1 }
    "Concept*tiny*short*medium*tall*gigantic*teeny*" { send_user "\nTEST PASS - xsListConcepts (TEST2)" }
}

# Display Concept (tiny from TEST2)
send "cat header | $env(SPLUNK_HOME)/bin/python ../release/xtreme/bin/xsDisplayConcept.py tiny FROM TEST2 in global \r"
expect {
    timeout { send_user "\nTEST FAIL - xsDisplayConcept (tiny from TEST2)"; exit 1 }
    "domain*tiny*" { send_user "\nTEST PASS - xsDisplayConcept (tiny from TEST2)" }
}

# List UOM (TEST2)
send "cat header | $env(SPLUNK_HOME)/bin/python ../release/xtreme/bin/xsListUOM.py FROM TEST2 in global \r"
expect {
    timeout { send_user "\nTEST FAIL - xsListUOM (TEST2)"; exit 1 }
    "*UOM*inches*" { send_user "\nTEST PASS - xsListUOM (TEST2)" }
}


# Delete Context (TESTR)
send "cat header | $env(SPLUNK_HOME)/bin/python ../release/xtreme/bin/xsDeleteContext.py TESTR in global\r"
expect {
    timeout { send_user "\nTEST FAIL - xsDeleteContext (TESTR)"; exit 1 }
    "Context TESTR successfully deleted" { send_user "\nTEST PASS - xsDeleteContext (TESTR)" }
}

# Delete Context (TEST2)
send "cat header | $env(SPLUNK_HOME)/bin/python ../release/xtreme/bin/xsDeleteContext.py TEST2 in global\r"
expect {
    timeout { send_user "\nTEST FAIL - xsDeleteContext (TEST2)"; exit 1 }
    "Context TEST2 successfully deleted" { send_user "\nTEST PASS - xsDeleteContext (TEST2)" }
}

# Delete Context (TESTUD)
send "cat header | $env(SPLUNK_HOME)/bin/python ../release/xtreme/bin/xsDeleteContext.py TESTUD in global\r"
expect {
    timeout { send_user "\nTEST FAIL - xsDeleteContext (TESTUD)"; exit 1 }
    "Context TESTUD successfully deleted" { send_user "\nTEST PASS - xsDeleteContext (TESTUD)" }
}

# Delete Context (TESTUD2)
send "cat header | $env(SPLUNK_HOME)/bin/python ../release/xtreme/bin/xsDeleteContext.py TESTUD2 in global\r"
expect {
    timeout { send_user "\nTEST FAIL - xsDeleteContext (TESTUD2)"; exit 1 }
    "Context TESTUD2 successfully deleted" { send_user "\nTEST PASS - xsDeleteContext (TESTUD2)" }
}
# Delete Context (TEST3)
send "cat header | $env(SPLUNK_HOME)/bin/python ../release/xtreme/bin/xsDeleteContext.py TEST3 in global\r"
expect {
    timeout { send_user "\nTEST FAIL - xsDeleteContext (TEST3)"; exit 1 }
    "Context TEST3 successfully deleted" { send_user "\nTEST PASS - xsDeleteContext (TEST3)" }
}

send_user "\n\nREGRESSION TESTS COMPLETED\n"



